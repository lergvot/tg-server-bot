# deploy.yml
name: Deploy Telegram Bot

on:
  push:
    branches:
      - main
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.3'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest -v --disable-warnings || exit 0

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: test  # Запускается ТОЛЬКО если job test прошёл успешно

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.3'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/TelegramServerBot
            git reset --hard HEAD
            git clean -fd
            git pull origin main --force
            source venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt --no-cache-dir
            systemctl restart tgbot.service
            echo "Deployment completed"

      - name: Send CI Report to Telegram Bot
        env:
          CI_ENDPOINT: ${{ secrets.CI_ENDPOINT }}
          SECRET: ${{ secrets.CI_SECRET }}
        run: |
          curl -X POST "$CI_ENDPOINT" \
            -H "Content-Type: application/json" \
            -d '{
              "secret": "'"$SECRET"'",
              "project": "Telegram Bot",
              "status": "✅ Успешно",
              "commit": "'"$(git rev-parse --short HEAD)"'",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "repo_url": "https://github.com/${{ github.repository }}"
            }'